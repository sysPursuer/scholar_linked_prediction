博士生
导师
大数据
技术
系统
国家
地方
联合
研究中心
副主任
并行
分布式计算
研究所
副所长
服务
计算
教育部
重点
实验室
方向
负责人
担任
国际
学术会议
程序
委员会
主席
委员
international
journal
parallel
programming
期刊
客座
编辑
华中科技大学
gpu
center
主任
中国计算机学会
高性能
专委会
法国巴黎
十三大
客座教授
湖北省
自然科学
基金
杰青
项目
获得者
欧盟
框架
中方
主持
科技
合作
专项
国家自然科学基金
支撑
计划
参与
研究计划
重点项目
国家项目
相关
研究工作
成果
computer
杂志
亮点
工作
推荐
指导
带领
学生
参加
国内
比赛
全球
大学生
超级计算机
竞赛
打破
世界纪录
奖励
一等奖
发明
优秀
学术论文
首届
研究生
评选
恩师
十佳
青年
教工
http
grid
hust
研究兴趣
分布式
云计算
数据处理
ccf
论文
征稿
bigdata
投稿
截止
日期
延期
会议
战略
多学科
交叉
融合
纽带
成功
举办
推动
学术交流
探讨
领域
挑战
创新
思想
国内外
最新
研究进展
交流
现状
研发
经验
湖北
武汉
主办
专家
承办
计算机
学会
武汉大学
华中师范大学
中国地质大学
软件工程
协办
组织
结构
大会
荣誉
指导委员会
林学
主题
科学
基础理论
方法
趋势
未来
构架
基础设施
采集
预处理
存储管理
模型
并行计算
主流
开源
系统优化
实践
网络
建模
数据分析
挖掘
智能
学习
架构
算法
可视化
分析
数据共享
开放
标准
隐私
保护
解决方案
工具
平台
行业
政府
优化
出版
会议所
接收
英文
springer
历届
优秀论文
扩充
中英文
发表
computing
data
analytics
science
engineering
interdisciplinary
sciences
life
mining
ieee
transactions
学报
自动化
发展
清华大学
中文信息
模式识别
人工智能
数据采集
智能系统
信息安全
计算机科学
计算机应用
工程
电子技术
南京大学
北京邮电大学
西安电子科技大学
中国科学技术大学
网站
easychair
org
conference
conf
录用
通知
runtime
aware
adaptive
scheduling
stream
processing
concurrency
computation
practice
experience
view
online
version
record
published
inclusion
issue
exploiting
sample
diversity
distributed
machine
learning
systems
increase
scalability
growing
execute
algorithms
clusters
developed
based
iterative
optimization
algorithm
parameter
server
framework
compute
samples
iteration
method
consumes
resources
amount
paper
study
model
updating
iterations
findings
propose
reduce
load
experiment
demonstrates
compared
current
methods
proposed
increasing
communications
efficient
write
buffer
pipeline
performance
hpc
applications
produce
increasingly
demands
storage
devices
seek
latency
throughput
serve
hybrid
system
solve
bottleneck
existing
solutions
burst
intermediate
layer
clients
disks
requests
improve
sufficient
space
meet
maximum
costly
solution
architecture
called
flash
efforts
achieve
limited
mixed
cache
management
lcs
strategy
spark
speed
generated
previous
memory
repeat
generation
sharing
mechanism
caching
faster
reaches
capacity
limits
performed
supply
recovered
classical
strategies
recovery
cost
degradation
costs
difference
reduces
total
named
dependencies
analyzing
application
calculates
running
predicting
weight
lead
minimum
future
experimental
approach
execution
time
cyclic
mapreduce
popular
simplify
repeated
transmission
hdfs
hadoop
file
designed
minimize
network
overhead
shared
locally
phase
combined
prediction
scheduler
brought
locality
terms
experiments
support
efficiently
environment
improvements
fuzzy
optimized
pricing
iaas
cloud
platform
schemes
spot
market
policy
guarantee
service
level
agreement
inevitable
suffer
payment
scheme
investigate
fair
issues
addressed
profits
resource
providers
customers
startup
huge
neglected
derive
optimal
price
acceptable
range
satisfies
simultaneously
billing
cycle
maximize
social
welfare
sum
revenue
gained
provider
carefully
evaluate
production
traces
workload
archive
google
compare
classic
benefit
increased
percent
respect
trace
dynamic
partitioning
virtualized
prevalence
virtualization
environments
guaranteed
cpu
aim
share
fairly
constraints
result
frequent
deadline
divide
physical
cpus
dynamically
parameters
virtual
machines
apply
schedule
design
global
implement
prototype
xen
hypervisor
conduct
verify
effectiveness
murs
mitigating
pressure
batch
enterprises
deploy
call
situation
worse
reasons
multiple
submitted
tasks
launched
executed
context
comparing
mode
processed
affect
including
light
reason
arises
massive
objects
studies
reveal
api
functions
frameworks
classify
usage
rate
mitigate
decrease
jobs
decreasing
collection
disk
automatic
optimizer
configuration
tool
implementation
experienced
scientific
communities
users
intend
program
set
runs
address
focus
opportunities
automation
profile
engine
collect
monitoring
programs
estimate
search
evaluation
job
completion
suggested
classifier
managing
hca
hierarchy
designs
processor
outperform
traditional
architectures
single
technology
deliver
power
density
manage
regions
patterns
control
placement
oblivious
software
characteristics
hardware
loss
fail
quality
enables
os
underlying
employs
monitor
behaviors
capture
hot
knowledge
select
policies
optimize
lower
consumption
simulation
demonstrate
achieves
improvement
morpho
decoupled
elastic
wide
adoption
commercial
clouds
native
platforms
provide
services
adaptation
basic
executing
units
user
cluster
initialized
input
output
transferred
external
persistent
ensure
properly
movements
modified
map
deployments
deployed
performing
directly
extra
transfers
location
perception
module
layers
intelligently
fetch
topology
vm
additionally
complementary
speedup
reduction
traffic
entire
amazon
fast
queries
continue
gain
popularity
witness
trend
datasets
repositories
size
bandwidth
allocation
priority
abstract
compete
requirement
special
proper
surge
inevitably
degrade
addition
kinds
assigning
deal
demand
credit
introduced
assign
isolation
specific
eager
combining
shuffle
effective
minimizing
reported
techniques
create
handling
dataset
limit
eliminate
automatically
types
obtains
expected
lifetime
concrete
proposal
top
decomposes
arrays
extensive
synthetic
real
consume
optimizing
graph
asynchronous
coloring
modern
accelerate
complicated
computational
theory
adopt
convergence
consistent
requires
locking
atomic
operations
leading
penalties
implemented
separate
vertices
potential
conflicts
guaranteeing
consistency
correctness
frog
majority
colored
colors
read
updated
degree
parallelism
sequential
distribution
flexibility
explored
alternative
local
academic
confirmed
feasibility
common
executable
larger
synchronization
requirements
key
contributions
autonomous
effectively
integrate
benchmark
approaches
balance
